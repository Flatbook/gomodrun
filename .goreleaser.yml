before:
  hooks:
    - make lint
    - make test
builds:
- env:
  - CGO_ENABLED=0
  main: ./cmd/gomodrun/main.go
  goos:
    - linux
    - darwin
    - windows
    - freebsd
    - netbsd
    - openbsd
    - dragonfly
  goarch:
    - 386
    - amd64
    - arm
    - arm64
  ignore:
    - goos: darwin
      goarch: 386
    - goos: openbsd
      goarch: arm
      goarm: 6
checksum:
  name_template: 'checksums.txt'
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
archives:
  - format_overrides:
    - goos: windows
      format: zip
signs:
  - artifacts: checksum
    args: ["-u", "6A34CFEE77FE8257C3BB92FE24C3FC5D6987904B", "--output", "${signature}", "--detach-sign", "${artifact}"]
brews:
  - github:
      owner: dustinblackman
      name: homebrew-tap
    folder: Formula
    homepage: https://github.com/dustinblackman/gomodrun
    description: The forgotten go tool that executes and caches binaries
    test: |
      system "#{bin}/gomodrun --version"
scoop:
  bucket:
    owner: dustinblackman
    name: scoop-bucket
  homepage: https://github.com/dustinblackman/gomodrun
  description: The forgotten go tool that executes and caches binaries included in go.mod files
  license: MIT
nfpms:
  - homepage:  https://github.com/dustinblackman/gomodrun
    description: The forgotten go tool that executes and caches binaries included in go.mod files
    maintainer: Dustin Blackman
    license: MIT
    vendor: Dustin Blackman
    formats:
    - deb
    - rpm
snapcrafts:
  - summary: The forgotten go tool that executes and caches binaries included in go.mod files
    description: |
      The forgotten go tool that executes and caches binaries included in go.mod files.
      This makes it easy to version cli tools in your projects such as `golangci-lint`
      and `ginkgo` that are versioned locked to what you specify in `go.mod`.
      Binaries are cached by go version and package version.
    grade: stable
    confinement: strict
    publish: true
    license: MIT
